// Code generated by MockGen. DO NOT EDIT.
// Source: block_client.go

// Package mock_client is a generated GoMock package.
package mock_client

import (
	blockpb "github.com/figment-networks/oasis-rpc-proxy/grpc/block/blockpb"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockBlockClient is a mock of BlockClient interface
type MockBlockClient struct {
	ctrl     *gomock.Controller
	recorder *MockBlockClientMockRecorder
}

// MockBlockClientMockRecorder is the mock recorder for MockBlockClient
type MockBlockClientMockRecorder struct {
	mock *MockBlockClient
}

// NewMockBlockClient creates a new mock instance
func NewMockBlockClient(ctrl *gomock.Controller) *MockBlockClient {
	mock := &MockBlockClient{ctrl: ctrl}
	mock.recorder = &MockBlockClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockBlockClient) EXPECT() *MockBlockClientMockRecorder {
	return m.recorder
}

// GetByHeight mocks base method
func (m *MockBlockClient) GetByHeight(arg0 int64) (*blockpb.GetByHeightResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByHeight", arg0)
	ret0, _ := ret[0].(*blockpb.GetByHeightResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByHeight indicates an expected call of GetByHeight
func (mr *MockBlockClientMockRecorder) GetByHeight(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByHeight", reflect.TypeOf((*MockBlockClient)(nil).GetByHeight), arg0)
}
