// Code generated by MockGen. DO NOT EDIT.
// Source: chain_client.go

// Package mock_client is a generated GoMock package.
package mock_client

import (
	chainpb "github.com/figment-networks/oasis-rpc-proxy/grpc/chain/chainpb"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockChainClient is a mock of ChainClient interface
type MockChainClient struct {
	ctrl     *gomock.Controller
	recorder *MockChainClientMockRecorder
}

// MockChainClientMockRecorder is the mock recorder for MockChainClient
type MockChainClientMockRecorder struct {
	mock *MockChainClient
}

// NewMockChainClient creates a new mock instance
func NewMockChainClient(ctrl *gomock.Controller) *MockChainClient {
	mock := &MockChainClient{ctrl: ctrl}
	mock.recorder = &MockChainClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockChainClient) EXPECT() *MockChainClientMockRecorder {
	return m.recorder
}

// GetHead mocks base method
func (m *MockChainClient) GetHead() (*chainpb.GetCurrentResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHead")
	ret0, _ := ret[0].(*chainpb.GetCurrentResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetHead indicates an expected call of GetHead
func (mr *MockChainClientMockRecorder) GetHead() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHead", reflect.TypeOf((*MockChainClient)(nil).GetHead))
}
